1. AvailabilityPython scripts are freely available at Nature Methods web site.2. Prerequisites- Python interpreter version higher or equal to 2.7 (Python 3 is not yet supported);- SAMtools version 0.1.18 or superior (other versions have not been tested);- GSNAP program (to perform read mapping only);3. InstallationEach script can be used as is or copied in the main path. In this last case the first line of each script file has to be modified including the link to the python interpreter. For example, if your python executable is located in /usr/local/bin, replace the first line with the following:#! /usr/local/bin/pythonWhen in the main path, change file permissions:chmod 755 my_python_file4. RunScripts can be launched by the following commands:- python mapExome.py (or solely mapExome.py if installed as above)- python assembleMTgenome.py (or solely mapExome.py if installed as above)5. mapExome.pyThis script facilitates the mapping of short reads onto pre-built GSNAP databases in order to select genuine mitochondrial sequences.To correctly use this script, GSNAP databases for mitochondrial and whole human genomes are required. Such databases can be created according to instructions provided with the last GSNAP release at the web site http://research-pub.gene.com/gmap/.  Options:        -a		Input Fastq         -b		Input Fastq for pair-end (optional)        -g		GSNAP excecutable [/usr/local/bin/gsnap]        -D	GSNAP database location [/usr/local/share]        -M	GSNAP database for mtDNA [mtdna]        -H	GSNAP database for complete human genome [hg18]        -t		GSNAP threads [8]        -o		Out folderThe mapExome.py script requires as input a Fastq file (or two in case of paired-end reads) and exact locations of GSNAP executable and related databases.A typical command line is:mapExome.py Ða R1.fastq Ðb R2.fastq Ðg /usr/local/bin/gsnap ÐD /usr/local/share ÐM mtdna ÐH hg18 Ðt 8 Ðo MyOutputFolderThe OUT.sam file in MyOutputFolder should contain genuine mitochondrial reads. Such file can be directly used for genome assembly. However, a post-processing to remove duplicated reads due to PCR is highly recommended.6. mapExome.pyThis scripts performs the mitochondrial genome assembly starting from a reference mitochondrial genome (the same used for mapping) and an input file in one of the following standard formats: SAM, BAM or pileup. If a pileup file is provided, SAMtools are not required.Options:        -f              Reference MT-DNA in fasta         -i              Input File [.pileup .sam or .bam]        -a              Human Genome in fasta [SAM or BAM only]        -q              min per base quality score [25]        -c              min. confidence level [0.75]        -d              min. coverage depth [5]        -g              min. gap lentgh [10]        -o              output base name [mtDNAassembly]        -s              Samtools executable [samtools]        -F              generate fasta output [no]        -C              generate coverage file [no]        -U              generate UCSC track file [no]        -P              print out basic statistics [no]        -A              add a value to name field of UCSC track [None]        -D              add a value to description field of UCSC track [None] Option explanations:-f: reference mitochondrial genome in fasta format. The same used for mapping;-i: input file in SAM, BAM or pileup format;-a: fasta file of whole human genome used by samtools for conversions (SAM-->BAM-->pileup). The corresponding index file is also required. If not present, it can be generated by samtools faidx program; -q: minimum quality score to accept nucleotides;-c: minimum nucleotide frequency to call a consensus base (values admitted from 0 to 1);-d: minimum number of supporting nucleotides to perform the consensus call;-g: minimum gap length to show;-o: a base name for output. Specific suffixes will be automatically added during the execution;-s: absolute path of samtools executable (optional in case of pileup input file);-F: create Fasta files including the sequence of the complete genome as well as sequences of all contigs;-C: create a coverage file including the coverage per contig and known mitochondrial annotations;-U: create a bed file for UCSC visualization;-P: print out basic statistics at the end of the run;-A: add a string comment to the name field of UCSC track;-D: add a string comment to the description field of UCSC track;A common command line is:assembleMTgenome.py Ðf chrM Ði OUT.bam Ða hg18 Ðo myGenome Ðs /usr/bin/samtools ÐCUFP
7. Contact
Send all comments to Ernesto Picardi - e.picardi@biologia.uniba.it

This software is associated to the publication:
"The hidden value of human whole exome sequencing"
by Ernesto Picardi (1,2)  and Graziano Pesole (1,2) 1 Dipartimento di Bioscienze, Biotecnologie e Scienze Farmacologiche, Universitˆ di Bari, 70125 Bari, Italy
2 Istituto di Biomembrane e Bioenergetica, Consiglio Nazionale delle Ricerche, 70125 Bari, Italy. 
